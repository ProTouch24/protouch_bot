import os
import asyncio
from aiogram import Bot
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import logging
from dotenv import load_dotenv
from aiogram import Dispatcher

# Load environment variables
load_dotenv()
API_TOKEN = os.getenv('API_TOKEN')

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# Define buttons with emojis
bt1 = KeyboardButton(text="üè¢ –û –Ω–∞—Å")
bt2 = KeyboardButton(text="üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
bt3 = KeyboardButton(text="üìã –í–∞–∫–∞–Ω—Å–∏–∏")
bt4 = KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
bt5 = KeyboardButton(text="üá∑üá∫/üá∫üáø –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
bt6 = KeyboardButton(text="üõí –¢–æ–≤–∞—Ä—ã")  # Button for products

# Create the main keyboard
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [bt1, bt2],
        [bt3, bt6],  # Product button
        [bt4, bt5]
    ],
    resize_keyboard=True,
    one_time_keyboard=True
)

# Updated product information
product_info = {
    "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å": {
        "types": {
            "65 –î–∏–æ–≥–∞–Ω–∞–ª—å": {
                "photo_url": "https://imgur.com/ocU74QJ",
                "description": """
                –ê–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä ‚Äî 2159 —Ö 1215–º–º; –ú–∞—Ç—Ä–∏—Ü–∞ ‚Äì DLED; 
                –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ ‚Äì 3840—Ö2160@60Hz 4–ö;
                –¶–≤–µ—Ç –¥–∏—Å–ø–ª–µ—è ‚Äì 1,07 M–ª—Ä–¥; –Ø—Ä–∫–æ—Å—Ç—å ‚Äî 350 cd/m; –ö–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å ‚Äî 1200:1/1300:1/3000:1; –£–≥–ª—ã –æ–±–∑–æ—Ä–∞ ‚Äì 178Àö/178Àö;
                –°–µ–Ω—Å–æ—Ä ‚Äî –ò–Ω—Ñ—Ä–∞–∫—Ä–∞—Å–Ω—ã–π –¥–æ 20 –∫–∞—Å–∞–Ω–∏–π, –í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ ‚Äì 7 –º—Å, –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω ‚Äî 16:9;
                –ü–æ—Ä—Ç—ã: USB 3.0√ó2, HDMI IN, TOUCH USB, TYPE-C, Keys; –°–∑–∞–¥–∏ ‚Äì HDMI INx2, USB 3.0√ó2, TOUCH USB, RS232,
                USB2.0, AUDIO IN, OPTICAL OUT, LINE OUT, RJ45 IN, RJ45 OUT. –î–∏–Ω–∞–º–∏–∫–∏ ‚Äî 2x15W; –°–≤—è–∑—å ‚Äî 1000–ú LAN, 
                802.11ac 2.4GHz & 5GHz Wi-Fi; –ú–æ–¥—É–ª—å Android: –û–° ‚Äî Android 14 –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ 3840—Ö2160. CPU ‚Äî Quad core A55
                —Å —á–∞—Å—Ç–æ—Ç–æ–π 1,5 –ì–ì—Ü; GPU ‚Äî Mali G52MP2; RAM ‚Äî 4GB, ROM ‚Äî 32 Gb eMMC. –í–µ—Å 132 –∫–≥; –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ ‚Äî 420 –í–∞—Ç—Ç.
                –î–∏–∑–∞–π–Ω: –°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π –º–µ—Ç–∞–ª–ª–∏–∫."""
            },
            "75 –î–∏–æ–≥–∞–Ω–∞–ª—å": {
                "photo_url": "https://imgur.com/ocU74QJ",
                "description": """
                –ê–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä ‚Äî 2159 —Ö 1215–º–º; –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ ‚Äì 3840—Ö2160@60Hz 4–ö;
                –¶–≤–µ—Ç –¥–∏—Å–ø–ª–µ—è ‚Äì 1,07 M–ª—Ä–¥; –Ø—Ä–∫–æ—Å—Ç—å ‚Äî 350 cd/m; –ö–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å ‚Äî 1200:1/1300:1/3000:1;
                –£–≥–ª—ã –æ–±–∑–æ—Ä–∞ ‚Äì 178Àö/178Àö; –ü–æ—Ä—Ç—ã: USB 3.0√ó2, HDMI IN, TOUCH USB, TYPE-C, Keys; –°–∑–∞–¥–∏ ‚Äì HDMI INx2, USB 3.0√ó2, 
                TOUCH USB, RS232, USB2.0, AUDIO IN, OPTICAL OUT, LINE OUT, RJ45 IN, RJ45 OUT. –î–∏–Ω–∞–º–∏–∫–∏ ‚Äî 2x15W; –°–≤—è–∑—å ‚Äî 1000–ú LAN,
                802.11ac 2.4GHz & 5GHz Wi-Fi. –ú–æ–¥—É–ª—å Android: –û–° ‚Äî Android 14. –í–µ—Å 132 –∫–≥; –î–∏–∑–∞–π–Ω: –°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π –º–µ—Ç–∞–ª–ª–∏–∫."""
            },
            "86 –î–∏–æ–≥–∞–Ω–∞–ª—å": {
                "photo_url": "https://imgur.com/ocU74QJ",
                "description": """
                –ê–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä ‚Äî 2159 —Ö 1215–º–º; –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ ‚Äì 3840—Ö2160@60Hz 4–ö;
                –¶–≤–µ—Ç –¥–∏—Å–ø–ª–µ—è ‚Äì 1,07 M–ª—Ä–¥; –Ø—Ä–∫–æ—Å—Ç—å ‚Äî 350 cd/m; –ö–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å ‚Äî 1200:1/1300:1/3000:1;
                –£–≥–ª—ã –æ–±–∑–æ—Ä–∞ ‚Äì 178Àö/178Àö; –ü–æ—Ä—Ç—ã: USB 3.0√ó2, HDMI IN, TOUCH USB, TYPE-C, Keys; –°–∑–∞–¥–∏ ‚Äì HDMI INx2, USB 3.0√ó2, 
                TOUCH USB, RS232, USB2.0, AUDIO IN, OPTICAL OUT, LINE OUT, RJ45 IN, RJ45 OUT. –î–∏–Ω–∞–º–∏–∫–∏ ‚Äî 2x15W; –°–≤—è–∑—å ‚Äî 1000–ú LAN,
                802.11ac 2.4GHz & 5GHz Wi-Fi. –ú–æ–¥—É–ª—å Android: –û–° ‚Äî Android 14. –í–µ—Å 132 –∫–≥; –î–∏–∑–∞–π–Ω: –°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π –º–µ—Ç–∞–ª–ª–∏–∫."""
            }
        }
    },
    "–ú–æ–±–∏–ª—å–Ω—ã–π —Å—Ç–µ–Ω–¥": {
        "types": {
            "2000": {
                "photo_url": "https://imgur.com/vY2QcfI",
                "description": """
    –í–µ—Å: 42kg
    –î–∏–∞–ø–∞–∑–æ–Ω –Ω–∞–∫–ª–æ–Ω–∞: ~ -10¬∞ +10¬∞
    –†–∞–∑–º–µ—Ä –ø–∞–Ω–µ–ª–∏: 55‚Äù ‚Äì 86 ‚Äù
    –ì–∞–±–∞—Ä–∏—Ç—ã: 1640—Ö 900 —Ö 600 –º–º
    –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å: 120kg"""
            },
            "1800": {
                "photo_url": "https://imgur.com/6eKO8cu",
                "description": """
    –≤–µ—Å: 180 –∫–≥
    –ö–æ–ª—ë—Å–∏–∫–∏: –ò–º–µ—é—Ç—Å—è —Å —Ñ–∏–∫—Å–∞—Ç–æ—Ä–∞–º–∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è
    –ü–æ–ª–∫–∏: –ò–º–µ—é—Ç—Å—è 2
    –ú–∞—Ç–µ—Ä–∏–∞–ª: –ú–µ—Ç–∞–ª–ª"""
            },
            "1700": {
                "photo_url": "https://imgur.com/4Nk2cRM",
                "description": """
    –≤–µ—Å: 100 –∫–≥
    –ö–æ–ª—ë—Å–∏–∫–∏: –ò–º–µ—é—Ç—Å—è —Å —Ñ–∏–∫—Å–∞—Ç–æ—Ä–∞–º–∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è
    –ü–æ–ª–∫–∏: –ò–º–µ—é—Ç—Å—è 2
    –ú–∞—Ç–µ—Ä–∏–∞–ª: –ú–µ—Ç–∞–ª–ª"""
            }
        }
    },
    "–ò–Ω—Ñ–æ–∫–∏–æ—Å–∫": {
        "types": {
            "32 –î–∏–æ–≥–∞–Ω–∞–ª—å": {
                "photo_url": "https://imgur.com/DZctjXm",
                "description": """
    –ò–Ω—Ñ–æ–∫–∏o—Å–∫ —Å–µ–Ω—Å–æ—Ä–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º.
    –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1920x1080
    –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: Wi-Fi –∏ Ethernet
    –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ: –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è —Å–∏—Å—Ç–µ–º–∞ 
    Android
    –ú–∞—Ç–µ—Ä–∏–∞–ª: –ú–µ—Ç–∞–ª–ª –∏ —Å—Ç–µ–∫–ª–æ
    –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, —Ä–µ–∫–ª–∞–º–∞, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ 
    —Ñ—É–Ω–∫—Ü–∏–∏."""
            },
            "43 –î–∏–æ–≥–∞–Ω–∞–ª—å": {
                "photo_url": "https://imgur.com/ukaJTeQ",
                "description": """
    –ò–Ω—Ñ–æ–∫–∏o—Å–∫ —Å–µ–Ω—Å–æ—Ä–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º.
    –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1920x1080
    –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: Wi-Fi –∏ Ethernet
    –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ: –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è —Å–∏—Å—Ç–µ–º–∞ 
    Android
    –ú–∞—Ç–µ—Ä–∏–∞–ª: –ú–µ—Ç–∞–ª–ª –∏ —Å—Ç–µ–∫–ª–æ
    –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, —Ä–µ–∫–ª–∞–º–∞, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ 
    —Ñ—É–Ω–∫—Ü–∏–∏."""
            },
            "55 –î–∏–æ–≥–∞–Ω–∞–ª—å": {
                "photo_url": "https://imgur.com/Yu9LzwC",
                "description": """
    –ò–Ω—Ñ–æ–∫–∏o—Å–∫ —Å–µ–Ω—Å–æ—Ä–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º.
    –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1920x1080
    –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: Wi-Fi –∏ Ethernet
    –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ: –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è —Å–∏—Å—Ç–µ–º–∞ 
    Android
    –ú–∞—Ç–µ—Ä–∏–∞–ª: –ú–µ—Ç–∞–ª–ª –∏ —Å—Ç–µ–∫–ª–æ
    –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, —Ä–µ–∫–ª–∞–º–∞, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ 
    —Ñ—É–Ω–∫—Ü–∏–∏."""
            }
        }
    }
} 
# Product type keyboard (inline)
def get_type_keyboard(product_name):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for type_name in product_info[product_name]["types"].keys():
        button = InlineKeyboardButton(text=type_name, callback_data=f"{product_name}:{type_name}")
        keyboard.inline_keyboard.append([button])
    # Add back button to return to product selection
    back_button = InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_products")
    keyboard.inline_keyboard.append([back_button])
    return keyboard

# Main /start handler
@dp.message(Command(commands=["start"]))
async def start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=main_keyboard)

# Show products list
@dp.message(lambda message: message.text == "üõí –¢–æ–≤–∞—Ä—ã")
async def show_products(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for product_name in product_info.keys():
        button = InlineKeyboardButton(text=product_name, callback_data=product_name)
        keyboard.inline_keyboard.append([button])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=keyboard)

# Show product types when a product is selected
@dp.callback_query(lambda call: call.data in product_info.keys())
async def show_product_types(callback_query: types.CallbackQuery):
    product_name = callback_query.data
    await callback_query.message.edit_text(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–ª—è {product_name}:", reply_markup=get_type_keyboard(product_name))

# Send product info when a type is selected
@dp.callback_query(lambda call: ":" in call.data)
async def send_product_info(callback_query: types.CallbackQuery):
    product_name, type_name = callback_query.data.split(":")
    product_type = product_info[product_name]["types"][type_name]

    await bot.send_photo(
        chat_id=callback_query.message.chat.id,
        photo=product_type["photo_url"],
        caption=f"{product_name} - {type_name}\n\n{product_type['description']}",
        reply_markup=get_type_keyboard(product_name)  # Include back button here as well
    )

# Back to product types from product info
@dp.callback_query(lambda call: call.data == "back_to_products")
async def back_to_products(callback_query: types.CallbackQuery):
    await callback_query.message.delete()
    await show_products(callback_query.message)

# Main entry point
async def main():
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())
